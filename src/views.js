import { loadRoute } from './router.js';
import { auth } from './auth.js';

export function showLogin() {
  const app = document.getElementById('app').innerHTML = `
  <link rel="stylesheet" href="./src/css/style-login.css">
  <div class="container-form sign-in">
        <div class="welcome-back">
            <div class="message">
                <h2 class="login-text">Bienvenido a CalmApp</h2>
                <button class="sign-up-btn">Iniciar Sesion</button>
            </div>
        </div>
        <form id="register-form" class="formulario">
            <h2 class="create-account">Crear una cuenta</h2>
            <div class="iconos">
                <div class="border-icon">
                    <i class='bx bxl-instagram'></i>
                </div>
                <div class="border-icon">
                    <i class='bx bxl-linkedin'></i>
                </div>
                <div class="border-icon">
                    <i class='bx bxl-facebook-circle'></i>
                </div>
            </div>
            <input type="text" id="register-name" placeholder="Nombre">
            <input type="email" id="register-email" placeholder="Email">
            <input type="password" id="register-password" placeholder="Contrase√±a">
            <button type="submit" class="sign-button" id="register">Registrarse</button>
        </form>
    </div>
    <div class="container-form sign-up">
        <form id="login-form" class="formulario">
            <h2 class="create-account">Iniciar Sesion</h2>
            <div class="iconos">
                <div class="border-icon">
                    <i class='bx bxl-instagram'></i>
                </div>
                <div class="border-icon">
                    <i class='bx bxl-linkedin'></i>
                </div>
                <div class="border-icon">
                    <i class='bx bxl-facebook-circle'></i>
                </div>
            </div>
            <input type="email" id="email" name="email" placeholder="Email">
            <input type="password" id="password" name="password" placeholder="Contrase√±a">
            <button type="submit" class="sign-button" id="login-button">Iniciar Sesion</button>
        </form>
        <div class="welcome-back">
            <div class="message">
                <div class="register-text">
                    <h2>Bienvenido de nuevo</h2>
                    <p>Si aun no tienes una cuenta por favor registrese aqui</p>
                </div>
                <button class="sign-in-btn">Registrarse</button>
            </div>
        </div>
    </div>`

  const $btnSignIn = document.querySelector('.sign-in-btn'),
    $btnSignUp = document.querySelector('.sign-up-btn'),
    $signUp = document.querySelector('.sign-up'),
    $signIn = document.querySelector('.sign-in');

  document.addEventListener('click', e => {
    if (e.target === $btnSignIn || e.target === $btnSignUp) {
      $signIn.classList.toggle('active');
      $signUp.classList.toggle('active')
    }
  });
  // Agregar evento al bot√≥n de login
  document.getElementById('login-form').onsubmit = async e => {
    e.preventDefault();
    const email = document.getElementById('email').value;
    const password = document.getElementById('password').value;

    try {
      await auth.login(email, password);
      window.location.pathname = '/home';  // Cambiar a la ruta que desees despu√©s del login
      loadRoute();
    } catch (err) {
      console.log(err.message);
    };
  };

  document.getElementById('register-form').onsubmit = async e => {
    e.preventDefault();
    const name = document.getElementById('register-name').value;
    const email = document.getElementById('register-email').value;
    const password = document.getElementById('register-password').value;
    try {
      await auth.register(name, email, password);
      loadRoute();
    } catch (err) {
      console.log('El usuario ya est√° registrado o hubo un error: ' + err.message);
    };
  };
};

export function showHome() {
  const app = document.getElementById('app').innerHTML = `
    <link rel="stylesheet" href="./src/css/style-home.css">
    <div class="header">
      <h1>CalmApp</h1>
      <p>Encuentra calma, equilibrio y bienestar emocional.</p>
      <div id="logout-container">
        <button class="logout-button" id="logout">
          <img src="./src/img/right-from-bracket-solid-full.svg"></img>
        </button>  
      </div>
    </div>
    <div class="card-container">
      <a href="/citas">
        <div class="card">
        <div class="card-icon"><i class="fa-solid fa-envelope"></i></div>
        <h3>Agendar citas</h3>
        <p>Reunete con expertos, la salud mental es tan importante como la salud f√≠sica.</p>
        </div>
      </a>

      <a href="/emociones">
        <div class="card">
        <div class="card-icon"><i class="fa-solid fa-hand-holding-heart"></i></div>
        <h3>Emociones</h3>
        <p>Aprende a gestionar tus emociones y mejora tu salud mental.</p>
      </div>
      </a>

      <a href="/informacion">
        <div class="card">
        <div class="card-icon"><i class="fa-solid fa-earth-americas"></i></div>
        <h3>Tips</h3>
        <p>Conecta con otros que tambi√©n est√°n en su camino.</p>
      </div></a>


      <a href="/musica"><div class="card">
        <div class="card-icon"><i class="fa-solid fa-headphones"></i></div>
        <h3>Musica</h3>
        <p>Encuentra musica para relajarte y liberar tensiones.</p>
        </div>
      </a>
    </div>


    <div class="alma-bot">
      <img src="./src/img/tortuga.png" alt="Alma la tortuga" class="alma-float" id="alma-icon">
    <div class="chat-box" id="alma-chat">
    <p><strong>Alma:</strong> ¬°Hola! ¬øC√≥mo te sientes hoy?</p>
    <button class="almaresponse" >üòä Bien</button>
    <button class="almaresponse" >üòî No muy bien</button>
    </div>
    </div>
    <footer>
      ¬© 2025 CalmApp. Todos los derechos reservados.
    </footer>
`;

  const logoutButton = document.getElementById('logout').addEventListener('click', (e) => {
    e.preventDefault();
    auth.logout();  // Redirige al login
  });
  const music = document.getElementById("musicaFondo");
  music.volume = 0.2;

  const iniciarMusica = () => {
    music.play().then(() => {
      console.log(" M√∫sica iniciada.");
    }).catch((error) => {
      console.log(" Error al reproducir m√∫sica:", error);
    });

    // Eliminar ambos eventos despu√©s del primer intento
    document.removeEventListener('click', iniciarMusica);
    window.removeEventListener('scroll', iniciarMusica);
  };

  document.addEventListener('click', iniciarMusica);
  window.addEventListener('scroll', iniciarMusica);
  const almaIcon = document.getElementById('alma-icon');
  const almaChat = document.getElementById('alma-chat');

  almaIcon.addEventListener('click', () => {
    almaChat.style.display = almaChat.style.display === 'block' ? 'none' : 'block';
  });


  function almaResponder() {
    almaChat.innerHTML = `<p><strong>Alma:</strong> Recuerda que tu bienestar es lo m√°s importante üßò‚Äç‚ôÇÔ∏è‚ú®</p>`;
  }

  const almaResponses = document.querySelectorAll('.almaresponse');
  almaResponses.forEach(response => {
    response.addEventListener('click', almaResponder);
  })
};

export function showInformacion() {
  const app = document.getElementById('app').innerHTML = `
  <link rel="stylesheet" href="./src/css/style-tips.css">
  <header class="header">
    <div class="container">
      <h1>CalmApp</h1>
      <p>Tu espacio seguro para cuidar tu salud mental</p>
    </div>
  </header>

  <main class="main-content">
  <section class="section">
  <a class="home" href="/home"><i class="fa-solid fa-house-chimney"></i></a>
      <h2>¬øQu√© son los sentimientos?</h2>
      <div class="video-container">
        <iframe src="https://www.youtube.com/embed/-vxXBmdcfFU?si=n5xUY5NOY_E8zlHu" title="Sentimientos" frameborder="0" allowfullscreen></iframe>
      </div>
      <p>
        Los sentimientos son la experiencia mental y privada de una emoci√≥n. Se dan cuando el cerebro procesa la emoci√≥n y somos conscientes de nuestro estado de √°nimo.
      </p>
    </section>

    <section class="section">
      <h2>¬øC√≥mo gestionar lo que sentimos?</h2>
      <div class="tips-container" id="tip-container">Cargando tip...</div>
    </section>

    <section class="section">
      <h2>¬øQu√© son las emociones?</h2>
      <div class="video-container">
        <iframe src="https://www.youtube.com/embed/OvgbMajFhmE?si=K5IeiSGo9L022EDN" title="Emociones" frameborder="0" allowfullscreen></iframe>
      </div>
      <p>
        Las emociones son reacciones naturales que todos experimentamos. Son respuestas f√≠sicas y mentales ante situaciones cotidianas. <strong>No son buenas ni malas</strong>: son se√±ales que nos ayudan a entendernos mejor.
      </p>
    </section>

    <section class="section">
      <h2>¬øC√≥mo pilotear nuestras emociones?</h2>
      <div class="tips-container" id="tip-container2">Cargando tip...</div>
    </section>

    <section class="emergency">
      <p>‚ö†Ô∏è En crisis: llama al <strong>192, opci√≥n 4</strong> o busca ayuda profesional en tu ciudad.</p>
    </section>

    <section class="cita">
      <a href="citas.html" class="appointment-btn">Agendar una cita</a>
    </section>
  </main>

  <footer class="footer">
    <p>¬© 2025 CalmApp | Desarrollado con empat√≠a üíô</p>
  </footer>

  `;

  const tips2 = [
    "Respira profundamente y enf√≥cate en tu respiraci√≥n por unos segundos.",
    "Identifica lo que est√°s sintiendo y n√≥mbralo sin juzgar.",
    "Da un peque√±o paseo para despejar la mente.",
    "Escribe en una libreta c√≥mo te sientes ahora mismo.",
    "Escucha una canci√≥n que te tranquilice o te levante el √°nimo.",
    "Habla con alguien de confianza sobre lo que est√°s viviendo.",
    "Haz una pausa de redes sociales por unos minutos.",
    "Estira tu cuerpo suavemente para liberar tensi√≥n.",
    "Recu√©rdate que est√° bien sentirse as√≠, no es permanente.",
    "Repite una frase que te calme, como ‚ÄúTodo est√° bien por ahora.‚Äù"
  ];

  let tipIndex2 = 0;
  const tipContainer2 = document.getElementById("tip-container2");

  function mostrarTip2() {
    tipContainer2.style.opacity = 0;
    setTimeout(() => {
      tipContainer2.textContent = tips2[tipIndex2];
      tipContainer2.style.opacity = 1;
      tipIndex2 = (tipIndex2 + 1) % tips2.length;
    }, 400);
  }

  // Mostrar el primer tip al cargar
  mostrarTip2();

  // Cambiar tip cada 6 segundos
  setInterval(mostrarTip2, 6000);

  const tips = [
    "Aprende a escuchar tus emociones y a identificarlas.",
    "Las emociones no son buenas ni malas, no las juzgues, m√°s bien preg√∫ntate qu√© est√°n dici√©ndote.",
    "Pedir ayuda es normal: todos pasamos por momentos dif√≠ciles.",
    "Todos pasamos en alg√∫n momento por alguna de las emociones y a veces estas nos sobrepasan, es normal pedir ayuda.",
    "Respira profundo: una pausa puede darte claridad en momentos intensos.",
    "Habla con alguien de confianza sobre lo que sientes.",
    "Haz una pausa digital: desconectarte por un rato puede ayudarte a reconectar contigo.",
    "Escribir acerca de lo sentimos o de c√≥mo percibimos los sentimientos y las emociones, hace que aclaremos lo que tenemos en nuestra cabeza e incluso empiece a tener m√°s sentido eso que estamos viviendo.  "
  ];

  let tipIndex = 0;
  const tipContainer = document.getElementById("tip-container");

  function mostrarTip() {
    tipContainer.style.opacity = 0;
    setTimeout(() => {
      tipContainer.textContent = tips[tipIndex];
      tipContainer.style.opacity = 1;
      tipIndex = (tipIndex + 1) % tips.length;
    }, 400);
  }

  // Mostrar el primer tip al cargar
  mostrarTip();

  // Cambiar tip cada 6 segundos
  setInterval(mostrarTip, 6000);

};

export function showEmociones() {
  const app = document.getElementById('app').innerHTML = `
  <link rel="stylesheet" href="./src/css/style-emociones.css">
  <header>
    <h1>CalmApp</h1>
    <p>Tu espacio seguro para cuidar tu salud mental</p>
  </header>

  <main>
    <a class="home" href="/home"><i class="fa-solid fa-house-chimney"></i></a>
    <h2>Emociones</h2>
    <div class="emotions-container">
      <div class="emotion-item">
        <button class="emotion-btn infeliz" data-dialog-prompt="¬øPor qu√© te sientes infeliz?"></button>
        <span>Infeliz</span>

        <dialog id="dialog-emotion" class="emotion-dialog">
          <form method="dialog">
            <p id="dialog-title">Cu√©ntame m√°s</p>z
            <textarea id="response" rows="3" ></textarea>
            <menu>
              <p>¬øQuieres agendar cita con alguno de nuestros expertos o prefieres desahogarte escribiendo c√≥mo te sientes?</p>
              <button id="btn-ok">Agendar cita</button>
              <button id="btn-cancel">Ir a mi diario</button>
            </menu>
          </form>
        </dialog>

      </div>
      <div class="emotion-item">
        <button class="emotion-btn descontento" data-dialog-prompt="¬øQu√© te hace sentir descontento?"></button>
        <span>Descontento</span>

        <dialog id="dialog-emotion" class="emotion-dialog">
          <form method="dialog">
            <p id="dialog-title">Cu√©ntame m√°s</p>
            <textarea id="response" rows="3" ></textarea>
            <menu>
              <p>¬øQuieres agendar cita con alguno de nuestros expertos o prefieres desahogarte escribiendo c√≥mo te sientes?</p>
              <button id="btn-ok">Agendar cita</button>
              <button id="btn-cancel">Ir a mi diario</button>
            </menu>
          </form>
        </dialog>

      </div>
      <div class="emotion-item">
        <button class="emotion-btn neutral" data-dialog-prompt="¬øQu√© piensas en un d√≠a neutral?"></button>
        <span>Neutral</span>
        
        <dialog id="dialog-emotion" class="emotion-dialog">
          <form method="dialog">
            <p id="dialog-title">Cu√©ntame m√°s</p>
            <textarea id="response" rows="3" ></textarea>
            <menu>
              <p>¬øQuieres agendar cita con alguno de nuestros expertos o prefieres desahogarte escribiendo c√≥mo te sientes?</p>
              <button id="btn-ok">Agendar cita</button>
              <button id="btn-cancel">Ir a mi diario</button>
            </menu>
          </form>
        </dialog>

      </div>
      <div class="emotion-item">
        <button class="emotion-btn bien" data-dialog-prompt="¬øQu√© te hace sentir bien?"></button>
        <span>Bien</span>

        <dialog id="dialog-emotion" class="emotion-dialog">
          <form method="dialog">
            <p id="dialog-title">Cu√©ntame m√°s</p>
            <textarea id="response" rows="3" ></textarea>
            <menu>
              <p>¬øQuieres agendar cita con alguno de nuestros expertos o prefieres desahogarte escribiendo c√≥mo te sientes?</p>
              <button id="btn-ok">Agendar cita</button>
              <button id="btn-cancel">Ir a mi diario</button>
            </menu>
          </form>
        </dialog>

      </div>
      <div class="emotion-item">
        <button class="emotion-btn genial" data-dialog-prompt="¬øQu√© te hace sentir genial?"></button>
        <span>Genial</span>

        <dialog id="dialog-emotion" class="emotion-dialog">
          <form method="dialog">
            <p id="dialog-title">Cu√©ntame m√°s</p>
            <textarea id="response" rows="3" ></textarea>
            <menu>
              <p>¬øQuieres agendar cita con alguno de nuestros expertos o prefieres desahogarte escribiendo c√≥mo te sientes?</p>
              <button id="btn-ok">Agendar cita</button>
              <button id="btn-cancel">Ir a mi diario</button>
            </menu>
          </form>
        </dialog>

      </div>
    </div>
  </main>

  <div id="notes-section">
  <h2>Mis notas</h2>
  <label for="">Elige alguna emoci√≥n :</label>
  <select name="emotions" id="emotion-select"> 
    <option value="Infeliz"  >Infeliz</option>
    <option value="Descontento"  >Descontento</option>
    <option value="Neutral"  >Neutral</option>
    <option value="Bien"  >Bien</option>
    <option value="Genial"  >Genial</option>
  </select>
  <textarea id="note-text" placeholder="Escribe tu nota aqu√≠..."></textarea>
  <button id="save-note">Guardar Nota</button>
  
  <div id="notes-list"></div>
  </div>

  <footer>
    ¬©Ô∏è 2025 CalmApp | Desarrollado con empat√≠a üíô
  </footer>
  `;
  document.addEventListener('DOMContentLoaded', () => {
    const dialog = document.getElementById('dialog-emotion');
    const titleEl = document.getElementById('dialog-title');
    const responseEl = document.getElementById('response');
  
    document.querySelectorAll('.emotion-btn').forEach(btn => {
      btn.addEventListener('click', () => {
        const promptText = btn.getAttribute('data-dialog-prompt');
        titleEl.innerHTML = `Cu√©ntame m√°s: <br>${promptText}`;
        responseEl.value = '';
        dialog.showModal();
      });
    });
  
    dialog.addEventListener('close', () => {
      if (dialog.returnValue === 'btn-ok') {
        console.log('Respuesta:', responseEl.value);
      }
    });
  });
  
  document.addEventListener('DOMContentLoaded', () => {
    const saveButton = document.getElementById('save-note');
    const noteText = document.getElementById('note-text');
    const emotionSelect = document.getElementById('emotion-select');
    const notesList = document.getElementById('notes-list');
  
    // Guardar la nota
    saveButton.addEventListener('click', () => {
      const noteContent = noteText.value.trim();
      const selectedEmotion = emotionSelect.value;
      if (noteContent) {
        const date = new Date();
        const noteDate = date.toLocaleString();
  
        const newNote = {
          content: noteContent,
          date: noteDate,
          emotion: selectedEmotion,
        };
  
        const savedNotes = JSON.parse(localStorage.getItem('notes')) || [];
        savedNotes.push(newNote);
        localStorage.setItem('notes', JSON.stringify(savedNotes));
        noteText.value = '';
        emotionSelect.selectedIndex = 0;
        displayNotes();
      }
    });
  
    // Mostrar notas
    function displayNotes() {
      notesList.innerHTML = '';
      const savedNotes = JSON.parse(localStorage.getItem('notes')) || [];
  
      savedNotes.forEach(note => {
        const noteElement = document.createElement('div');
        noteElement.classList.add('note-item', note.emotion.toLowerCase()); // ‚Üê aqu√≠ aplica la clase de emoci√≥n
  
        noteElement.innerHTML = `
          <div class="note-title">
            <span class="emotion-bubble"></span> 
            Emoci√≥n: ${capitalizeFirstLetter(note.emotion)}
          </div>
          <p>${note.content}</p>
          <div class="note-date">Guardada el: ${note.date}</div>
        `;
  
        notesList.appendChild(noteElement);
      });
    }
  
    displayNotes();
  });
  
  function capitalizeFirstLetter(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
  };
};

export function showMusica() {
  const app = document.getElementById('app').innerHTML = `
  <link rel="stylesheet" href="./src/css/style-musica.css">
    <header>
    <h1>CalmApp</h1>
    <p>Tu espacio seguro para cuidar tu salud mental</p>
  </header>

  <div class="main-content">
  <a class="home" href="/home"><i class="fa-solid fa-house-chimney"></i></a>
    <section class="embed-section">
      <div class="controls">
        <button onclick="loadContent('songs')">Canciones</button>
        <button onclick="loadContent('podcast')">Podcast</button>
        <button onclick="loadContent('melodias')">Melod√≠as</button>
      </div>
      <div class="embed-container" id="embedContainer">
      </div>
    </section>
  </div>
  
  <footer>
    ¬©Ô∏è 2025 CalmApp | Desarrollado con empat√≠a üíô
  </footer>
  `;
  const embedContainer = document.getElementById("embedContainer");

const embeds = {
  songs: [
    `<iframe data-testid="embed-iframe" style="border-radius:12px" src="https://open.spotify.com/embed/track/6kkwzB6hXLIONkEk9JciA6?utm_source=generator" width="100%" height="200" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`,
    `<iframe data-testid="embed-iframe" style="border-radius:12px" src="https://open.spotify.com/embed/track/2q7AEvIwBCaVOa1blpPJyt?utm_source=generator" width="100%" height="200" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`,
    `<iframe data-testid="embed-iframe" style="border-radius:12px" src="https://open.spotify.com/embed/track/1zwMYTA5nlNjZxYrvBB2pV?utm_source=generator" width="100%" height="200" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`,
    `<iframe data-testid="embed-iframe" style="border-radius:12px" src="https://open.spotify.com/embed/track/2dphvmoLEXdk8hOYxmHlI3?utm_source=generator" width="100%" height="200" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`,
    `<iframe data-testid="embed-iframe" style="border-radius:12px" src="https://open.spotify.com/embed/track/0lRnbYaPtv0A5OezVahO8e?utm_source=generator" width="100%" height="200" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`,
    `<iframe data-testid="embed-iframe" style="border-radius:12px" src="https://open.spotify.com/embed/track/6ZLGthToczpvnL5Eoy6yrY?utm_source=generator" width="100%" height="200" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`,
    `<iframe data-testid="embed-iframe" style="border-radius:12px" src="https://open.spotify.com/embed/track/2WyMUbRbYvNWXg83ugIgzi?utm_source=generator" width="100%" height="200" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`,
    `<iframe data-testid="embed-iframe" style="border-radius:12px" src="https://open.spotify.com/embed/track/3ui3UHjpXpWiQjoLwuENB8?utm_source=generator" width="100%" height="200" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`,
    `<iframe data-testid="embed-iframe" style="border-radius:12px" src="https://open.spotify.com/embed/track/1kyiUCr4yxaE5lfXRzfcT1?utm_source=generator" width="100%" height="200" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`,
    `<iframe data-testid="embed-iframe" style="border-radius:12px" src="https://open.spotify.com/embed/track/4vOQ55pOMyE6bQJJzm3kei?utm_source=generator" width="100%" height="200" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`,
  ],
  podcast: [
    `<iframe data-testid="embed-iframe" style="border-radius:12px" src="https://open.spotify.com/embed/track/7uBNpRc8gdsbeLs8Y8ztwI?utm_source=generator" width="100%" height="352" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`
  ],
  melodias: [
    `<iframe src="https://open.spotify.com/embed/playlist/37i9dQZF1DX3Ogo9pFvBkY?utm_source=generator" height="352" frameborder="0" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`,
    `<iframe data-testid="embed-iframe" style="border-radius:12px" src="https://open.spotify.com/embed/track/0vJ9HXWnVVW2hTNoF5xbG1?utm_source=generator" width="100%" height="352" frameBorder="0" allowfullscreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy"></iframe>`
  ]
};

function loadContent(type) {
  embedContainer.innerHTML = embeds[type].join('');
}

// Cargar canciones por defecto
loadContent('songs');
};

export function showCita() {
  const app = document.getElementById('app').innerHTML = `
  <link rel="stylesheet" href="./src/css/style-citas.css">
  <header class="header">
        <div class="container">
        <h1>CalmApp</h1>
        <p>Agenda tu cita con uno de nuestros psicologos para cuidar tu bienestar emocional</p>
        </div>
    </header>
    

    <main class="container">
        <section class="form-section">
            <a class="home" href="/home"><i class="fa-solid fa-house-chimney"></i></a>

        <h2>Agendar Cita</h2>
        <form id="form" novalidate>
            <div class="form-group">
            <label for="nombre">Nombre completo</label>
            <input type="text" id="nombre" name="nombre" placeholder="Tu nombre completo" required />
            </div>

            <div class="form-group">
            <label for="email">Correo electr√≥nico</label>
            <input type="email" id="email" name="email" placeholder="tucorreo@correo.com" required />
            </div>

            <div class="form-row">
            <div class="form-group">
                <label for="fecha">Fecha de la cita</label>
                <input type="date" id="fecha" name="fecha" required />
            </div>

            <div class="form-group">
                <label for="hora">Hora de la cita</label>
                <input type="time" id="hora" name="hora" required />
            </div>
            </div>

            <button type="submit" class="btn-submit" id="button">Agendar cita <i class="fa-solid fa-calendar-check"></i></button>

        </form>
        </section>
    </main>

    <footer class="footer">
        <div class="container">
        ¬© 2025 CalmApp. Todos los derechos reservados.
        </div>
    </footer>
  `;
  const form = document.getElementById('form');
  const btn = document.getElementById('button');

  form.addEventListener('submit', function (e) {
    e.preventDefault();

    const fechaInput = document.getElementById("fecha");
    const hoy = new Date().toISOString().split("T")[0];
    fechaInput.setAttribute("min", hoy);

    function convertirHora(hora24) {
      const [hora, minutos] = hora24.split(':');
      const h = parseInt(hora);
      const ampm = h >= 12 ? 'PM' : 'AM';
      const hora12 = h % 12 || 12;
      return `${hora12}:${minutos} ${ampm}`;
    }

    if (!form.checkValidity()) {
      form.reportValidity();
      return;
    }

    btn.value = 'Enviando...';

    const horaAMPM = convertirHora(form.hora.value);

    const serviceID = 'default_service';
    const templateID = 'template_rw6fb23';

    emailjs.send(serviceID, templateID, {
      nombre: form.nombre.value,
      email: form.email.value,
      fecha: form.fecha.value,
      hora: horaAMPM
    })
    .then(() => {
      btn.value = 'Agendar cita';

      Swal.fire({
        title: '¬°Cita agendada!',
        text: `${form.nombre.value}, tu cita qued√≥ agendada para el ${form.fecha.value} a las ${horaAMPM}.`,
        icon: 'success',
        confirmButtonColor: '#6C4AB6',
      });

      form.reset();
    }, (err) => {
      btn.value = 'Agendar cita';
      Swal.fire({
        title: 'Error',
        text: 'Hubo un problema al enviar la cita. Intenta nuevamente.',
        icon: 'error',
      });
      console.error(err);
    });
  });
};

export function showAmigo() {
  const app = document.getElementById('app').innerHTML = `
      <div class="main-container">
        <div class="sidebar">
            <h2>Menu</h2>
            <button>Home</button>
            <button>About us</button>
            <button>Contact</button>
            <button>Return</button>
        </div>

        <div class="chat-container">
            <div class="chat-header">
                <button id="toggleDarkMode"></button>
                <h2>Bot de Apoyo</h2>
            </div>

            <div class="chat-messages" id="chatMessages"></div>

            <div class="chat-input">
                <input type="text" id="userInput" placeholder="Escribe c√≥mo te sientes..." />
                <button id="sendBtn">Enviar</button>
            </div>
        </div>
    </div>
  `;
  const sendBtn = document.getElementById("sendBtn");
  const userInput = document.getElementById("userInput");
  const chatMessages = document.getElementById("chatMessages");

  window.addEventListener("DOMContentLoaded", () => {
      mostrarMensajeBot("Hola, estoy aqu√≠ para ayudarte. ¬øC√≥mo te sientes hoy?");
  });
  sendBtn.addEventListener("click", () => {
      const mensaje = userInput.value.trim();
      if (mensaje !== "") {
          mostrarMensajeUsuario(mensaje);
          responderComoBot(mensaje.toLowerCase());
          userInput.value = "";
      }
  });

  function mostrarMensajeUsuario(texto) {
      const div = document.createElement("div");
      div.className = "message user-message";
      div.textContent = texto;
      chatMessages.appendChild(div);
      chatMessages.scrollTop = chatMessages.scrollHeight;
      scrollToBottom();
  }

  function mostrarMensajeBot(texto) {
      const div = document.createElement("div");
      div.className = "message bot-message";
      div.textContent = texto;
      chatMessages.appendChild(div);
      chatMessages.scrollTop = chatMessages.scrollHeight;
      scrollToBottom();

      if (texto.toLowerCase().includes("agendar una cita")) {
          mostrarOpcionesCita();
      }
  }

  function mostrarOpcionesCita() {
      const chatMessages = document.getElementById("chatMessages");

      const contenedorOpciones = document.createElement("div");
      contenedorOpciones.classList.add("cita-opciones");

      const btnSi = document.createElement("button");
      btnSi.innerText = "Si";
      btnSi.classList.add("boton-cita");
      btnSi.onclick = () => {
          mostrarMensajeUsuario("Si");
          mostrarMensajeBot("Perfecto, tu cita ha sido agendada");
          contenedorOpciones.remove();
      };

      const btnNo = document.createElement("button");
      btnNo.innerText = "No";
      btnNo.classList.add("boton-cita");
      btnNo.onclick = () => {
          mostrarMensajeUsuario("No");
          mostrarMensajeBot("De acuerdo, si cambias de opini√≥n, estar√© aqu√≠.");
          contenedorOpciones.remove()
      };

      contenedorOpciones.appendChild(btnSi);
      contenedorOpciones.appendChild(btnNo);
      chatMessages.appendChild(contenedorOpciones);

      scrollToBottom();
  }



  function elegirAleatoria(lista) {
      return lista[Math.floor(Math.random() * lista.length)];
  }

  function responderComoBot(texto) {

      texto = texto.toLowerCase();

      const respuestas = {
          hola: ["¬°Hola! Bienvenido a tu espacio seguro. ¬øC√≥mo est√°s hoy? üåà",
          ],

          charla: ["Cu√©ntame en qu√© est√°s pensando. Estoy contigo. üí≠",
          ],

          triste: [`Siento mucho que te sientas as√≠. Recuerda que est√° bien no estar bien todo el tiempo.
          ¬øTe gustar√≠a escribir en tu diario emocional o escuchar una playlist para reconectar contigo?
          Tambi√©n te dejo una frase para hoy:
          Incluso las tormentas m√°s fuertes pasan. T√∫ tambi√©n lo har√°s.
          
          ¬øTe gustar√≠a agendar una cita con uno de nuestros profesionales?
          `
          ],

          feliz: ["¬°Qu√© lindo escucharlo! Atesora esos momentos. üíõ"
          ],

          ansioso: [`Respira conmigo: inhala‚Ä¶ 3, 2, 1. Exhala‚Ä¶ La ansiedad puede ser abrumadora, pero no est√°s solo  
          ¬øTe gustar√≠a hacer un ejercicio de respiraci√≥n guiada o recibir un tip para calmar tu mente? 
          (Escribeme tu respuesta con si) 
          si deseas el tip. Espero tu respuesta.`,
          ],

          tip: [`S√© que en este momento todo puede sentirse abrumador, como si tu mente no pudiera descansar.
               Quiero que sepas que no est√°s solo. Respira lento‚Ä¶ inhala profundamente por 4 segundos, 
               mant√©n el aire por 4, y exhala suavemente por 6. 
               Cada respiraci√≥n consciente que haces es una forma de recordarle a tu cuerpo que est√° a salvo. A veces, no necesitamos tener todas las respuestas, 
               solo darnos permiso para hacer una pausa. Est√°s haciendo lo mejor que puedes, y eso ya es suficiente. üíõ `
          ],

          continuar: ["¬øQue mas puedo hacer por ti? ‚ù§",
          ],

          solo: ["Aunque te sientas solo, yo estoy aqu√≠. Puedes hablarme cuando lo necesites."
          ],

          enojado: ["La ira es v√°lida. ¬øQu√© te hizo sentir as√≠? Puedes cont√°rmelo. üí¢"
          ],

          miedo: ["El miedo nos protege, pero tambi√©n nos limita. H√°blame de eso. Estoy para apoyarte. üåå",
          ],

          culpa: ["La culpa pesa, pero t√∫ mereces perd√≥n y comprensi√≥n. ¬øQuieres hablar de eso?",
          ],

          autoestima: ["Eres m√°s fuerte de lo que crees. No te compares. T√∫ eres √∫nico.",
          ],

          agotado: ["Descansar tambi√©n es avanzar. Tu cuerpo y mente merecen pausas. üí§",
          ],

          motivacion: ["Cada paso, aunque peque√±o, te acerca a tu meta. No te rindas. üöÄ",
          ],

          default: ["Estoy aqu√≠ para ti. Puedes hablarme sin miedo. ¬øQu√© te gustar√≠a contarme?"
          ]
      };

      let respuestaFinal = "";

      // Detecci√≥n basada en palabras clave
      if (texto.includes("hola") || texto.includes("buenas") || texto.includes("buenos dias")) {
          respuestaFinal = elegirAleatoria(respuestas.hola);
      } else if (
          texto.includes("pienso") || texto.includes("reflexiono") || texto.includes("quiero") || texto.includes("charla")
      ) {
          respuestaFinal = elegirAleatoria(respuestas.charla);
      } else if (
          texto.includes("triste") || texto.includes("llorar") || texto.includes("deprimido")
      ) {
          respuestaFinal = elegirAleatoria(respuestas.triste);
      }
      else if (
          texto.includes("feliz") || texto.includes("contento") || texto.includes("alegre")
      ) {
          respuestaFinal = elegirAleatoria(respuestas.feliz);
      } else if (
          texto.includes("ansioso") || texto.includes("nervioso") || texto.includes("estresado")
      ) {
          respuestaFinal = elegirAleatoria(respuestas.ansioso);
      } else if (
          texto.includes("si") || texto.includes("s√≠") || texto.includes("hazlo") || texto.includes("dame un tip")
      ) {
          respuestaFinal = elegirAleatoria(respuestas.tip)
      } else if (texto.includes("seguir") || texto.includes("continuar")) {
          respuestaFinal = elegirAleatoria(respuestas.continuar)
      }
      else if (
          texto.includes("solo") || texto.includes("sola") || texto.includes("nadie") || texto.includes("soledad")
      ) {
          respuestaFinal = elegirAleatoria(respuestas.solo);
      } else if (
          texto.includes("enojado") || texto.includes("molesto") || texto.includes("furioso") || texto.includes("agresivo")
      ) {
          respuestaFinal = elegirAleatoria(respuestas.enojado);
      } else if (
          texto.includes("miedo") || texto.includes("temor") || texto.includes("panico") || texto.includes("asustado")
      ) {
          respuestaFinal = elegirAleatoria(respuestas.miedo);
      } else if (
          texto.includes("culpa") || texto.includes("culpable")
      ) {
          respuestaFinal = elegirAleatoria(respuestas.culpa);
      } else if (
          texto.includes("valgo") || texto.includes("autoestima") || texto.includes("soy feo")
      ) {
          respuestaFinal = elegirAleatoria(respuestas.autoestima);
      } else if (
          texto.includes("cansado") || texto.includes("agotado") || texto.includes("sin energ√≠a")
      ) {
          respuestaFinal = elegirAleatoria(respuestas.agotado);
      } else if (
          texto.includes("motivado") || texto.includes("lograr") || texto.includes("meta") || texto.includes("progreso")
      ) {
          respuestaFinal = elegirAleatoria(respuestas.motivacion);
      } else {
          respuestaFinal = elegirAleatoria(respuestas.default);
      }

      setTimeout(() => {
          mostrarMensajeBot(respuestaFinal);
      }, 600);
  }

    // Activar Enter para enviar el mensaje
    userInput.addEventListener("keydown", (event) => {
        if (event.key === "Enter") {
            event.preventDefault();
            sendBtn.click();
        }
    });

    function scrollToBottom() {
        const chatMessages = document.getElementById("chatMessages");
        chatMessages.scrollTo({
            top: chatMessages.scrollHeight,
            behavior: "smooth"
        });
    }

    document.getElementById("toggleDarkMode").addEventListener("click", () => {
        document.body.classList.toggle("dark-mode");
    });
    }

export function show404() {
  return `
    <section>
      <h2>P√°gina no encontrada</h2>
      <p>Lo sentimos, la p√°gina que buscas no existe.</p>
    </section>`;
};